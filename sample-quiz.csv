question,option1,option2,option3,option4,correct
"What is the core concept of Object-Oriented Programming?", "Encapsulation", "Recursion", "Iteration", "Compilation", "Encapsulation"
"Which feature of OOP allows reusing existing code?", "Abstraction", "Polymorphism", "Inheritance", "Encapsulation", "Inheritance"
"What does encapsulation achieve in OOP?", "Hides implementation details", "Allows multiple inheritance", "Increases code redundancy", "Makes debugging harder", "Hides implementation details"
"What is the main purpose of a constructor in OOP?", "To free memory", "To initialize an object", "To destroy an object", "To call a function", "To initialize an object"
"Which OOP principle allows multiple functions with the same name but different parameters?", "Encapsulation", "Overloading", "Inheritance", "Abstraction", "Overloading"
"What is the benefit of polymorphism in OOP?", "Reduces code readability", "Allows multiple forms of a function", "Eliminates object instantiation", "Forces single implementation", "Allows multiple forms of a function"
"Which access modifier restricts access to a member within the same class only?", "Public", "Protected", "Private", "Internal", "Private"
"Inheritance in OOP is mainly used for?", "Code duplication", "Code reusability", "Reducing abstraction", "Creating private methods", "Code reusability"
"Which class cannot be instantiated?", "Abstract class", "Concrete class", "Static class", "Final class", "Abstract class"
"Which concept of OOP restricts direct access to some object components?", "Encapsulation", "Abstraction", "Polymorphism", "Inheritance", "Encapsulation"
"What is function overriding?", "Rewriting a function with different parameters", "Using the same function name in different classes", "Replacing a base class function in the derived class", "Declaring multiple constructors", "Replacing a base class function in the derived class"
"What does the ‘super’ keyword do in OOP?", "Calls the parent class constructor", "Creates a new object", "Returns an instance of a class", "Deletes an object", "Calls the parent class constructor"
"What is the role of the 'this' keyword?", "Refers to the current object", "Points to the parent class", "Calls a static method", "Creates a new object", "Refers to the current object"
"What does abstraction achieve in OOP?", "Hides unnecessary details", "Removes object dependencies", "Forces data exposure", "Allows only single inheritance", "Hides unnecessary details"
"Which of the following allows dynamic method binding in OOP?", "Polymorphism", "Encapsulation", "Static binding", "Function overloading", "Polymorphism"
"What is a virtual function?", "A function defined in an interface", "A function that can be overridden in a subclass", "A function with no return type", "A function with fixed implementation", "A function that can be overridden in a subclass"
"Which feature allows a subclass to provide a specific implementation of a method already defined in its base class?", "Encapsulation", "Abstraction", "Method overriding", "Method overloading", "Method overriding"
"What is the difference between composition and inheritance?", "Composition represents 'has-a', while inheritance represents 'is-a'", "Both are the same", "Inheritance is more flexible than composition", "Composition requires abstract classes", "Composition represents 'has-a', while inheritance represents 'is-a'"
"What type of class allows creating only one instance?", "Abstract class", "Static class", "Singleton class", "Final class", "Singleton class"
"What is an interface in OOP?", "A class that cannot be instantiated", "A blueprint that defines methods without implementation", "A function with no parameters", "A class with only private methods", "A blueprint that defines methods without implementation"
"Which of the following is an advantage of OOP?", "Increases code redundancy", "Improves code reusability and maintainability", "Makes debugging more difficult", "Reduces performance", "Improves code reusability and maintainability"
"In OOP, what does a destructor do?", "Allocates memory", "Destroys an object", "Creates a new object", "Calls the base class constructor", "Destroys an object"
"What is meant by multiple inheritance?", "A class can inherit from multiple classes", "A class has multiple constructors", "A class has multiple objects", "A class can have multiple access modifiers", "A class can inherit from multiple classes"
"What does the term 'late binding' mean?", "Method resolution occurs at compile-time", "Method resolution occurs at runtime", "Binding is performed manually", "Method binding is done statically", "Method resolution occurs at runtime"
"Which OOP feature enables defining a method in a superclass and overriding it in a subclass?", "Encapsulation", "Overloading", "Polymorphism", "Data hiding", "Polymorphism"
"What does a static method belong to?", "A specific object", "The class itself", "An instance variable", "Only derived classes", "The class itself"
"In OOP, what is meant by a friend function?", "A function that has access to private members of a class", "A function that returns an object", "A function that calls another function", "A function inside an interface", "A function that has access to private members of a class"
"Which of the following best describes method overloading?", "Defining multiple methods with the same name but different parameters", "Redefining a method in a subclass", "Hiding method implementation details", "Using the same method name in multiple classes", "Defining multiple methods with the same name but different parameters"
"What is the difference between an abstract class and an interface?", "An abstract class can have implemented methods, but an interface cannot", "Interfaces allow instance creation", "Abstract classes cannot have constructors", "Interfaces can have implemented methods", "An abstract class can have implemented methods, but an interface cannot"
